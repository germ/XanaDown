import extend from './extend';
import * as is from './is';
export default function normalize(type, listeners, result) {
    result = result || {};
    if (is.string(type) && type.search(' ') !== -1) {
        type = split(type);
    }
    if (is.array(type)) {
        return type.reduce((acc, t) => extend(acc, normalize(t, listeners, result)), result);
    }
    // ({ type: fn }) -> ('', { type: fn })
    if (is.object(type)) {
        listeners = type;
        type = '';
    }
    if (is.func(listeners)) {
        result[type] = result[type] || [];
        result[type].push(listeners);
    }
    else if (is.array(listeners)) {
        for (const l of listeners) {
            normalize(type, l, result);
        }
    }
    else if (is.object(listeners)) {
        for (const prefix in listeners) {
            const combinedTypes = split(prefix).map((p) => `${type}${p}`);
            normalize(combinedTypes, listeners[prefix], result);
        }
    }
    return result;
}
function split(type) {
    return type.trim().split(/ +/);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9ybWFsaXplTGlzdGVuZXJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibm9ybWFsaXplTGlzdGVuZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sTUFBTSxNQUFNLFVBQVUsQ0FBQTtBQUM3QixPQUFPLEtBQUssRUFBRSxNQUFNLE1BQU0sQ0FBQTtBQU0xQixNQUFNLENBQUMsT0FBTyxVQUFVLFNBQVMsQ0FDL0IsSUFBeUIsRUFDekIsU0FBMkQsRUFDM0QsTUFBNEI7SUFFNUIsTUFBTSxHQUFHLE1BQU0sSUFBSSxFQUFFLENBQUE7SUFFckIsSUFBSSxFQUFFLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7UUFDOUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQTtLQUNuQjtJQUVELElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQyxNQUFNLENBQ2hCLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxNQUFNLENBQUMsQ0FBQyxFQUN4RCxNQUFNLENBQ1AsQ0FBQTtLQUNGO0lBRUQsdUNBQXVDO0lBQ3ZDLElBQUksRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUNuQixTQUFTLEdBQUcsSUFBSSxDQUFBO1FBQ2hCLElBQUksR0FBRyxFQUFFLENBQUE7S0FDVjtJQUVELElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRTtRQUN0QixNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQTtRQUNqQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0tBQzdCO1NBQ0ksSUFBSSxFQUFFLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxFQUFFO1FBQzVCLEtBQUssTUFBTSxDQUFDLElBQUksU0FBUyxFQUFFO1lBQ3pCLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFBO1NBQzNCO0tBQ0Y7U0FDSSxJQUFJLEVBQUUsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLEVBQUU7UUFDN0IsS0FBSyxNQUFNLE1BQU0sSUFBSSxTQUFTLEVBQUU7WUFDOUIsTUFBTSxhQUFhLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQTtZQUU3RCxTQUFTLENBQUMsYUFBYSxFQUFFLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQTtTQUNwRDtLQUNGO0lBRUQsT0FBTyxNQUE2QixDQUFBO0FBQ3RDLENBQUM7QUFFRCxTQUFTLEtBQUssQ0FBRSxJQUFZO0lBQzFCLE9BQU8sSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQTtBQUNoQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4dGVuZCBmcm9tICcuL2V4dGVuZCdcbmltcG9ydCAqIGFzIGlzIGZyb20gJy4vaXMnXG5cbmV4cG9ydCBpbnRlcmZhY2UgTm9ybWFsaXplZExpc3RlbmVycyB7XG4gIFt0eXBlOiBzdHJpbmddOiBJbnRlcmFjdC5MaXN0ZW5lcltdXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vcm1hbGl6ZSAoXG4gIHR5cGU6IEludGVyYWN0LkV2ZW50VHlwZXMsXG4gIGxpc3RlbmVycz86IEludGVyYWN0Lkxpc3RlbmVyc0FyZyB8IEludGVyYWN0Lkxpc3RlbmVyc0FyZ1tdLFxuICByZXN1bHQ/OiBOb3JtYWxpemVkTGlzdGVuZXJzLFxuKTogTm9ybWFsaXplZExpc3RlbmVycyB7XG4gIHJlc3VsdCA9IHJlc3VsdCB8fCB7fVxuXG4gIGlmIChpcy5zdHJpbmcodHlwZSkgJiYgdHlwZS5zZWFyY2goJyAnKSAhPT0gLTEpIHtcbiAgICB0eXBlID0gc3BsaXQodHlwZSlcbiAgfVxuXG4gIGlmIChpcy5hcnJheSh0eXBlKSkge1xuICAgIHJldHVybiB0eXBlLnJlZHVjZTxOb3JtYWxpemVkTGlzdGVuZXJzPihcbiAgICAgIChhY2MsIHQpID0+IGV4dGVuZChhY2MsIG5vcm1hbGl6ZSh0LCBsaXN0ZW5lcnMsIHJlc3VsdCkpLFxuICAgICAgcmVzdWx0XG4gICAgKVxuICB9XG5cbiAgLy8gKHsgdHlwZTogZm4gfSkgLT4gKCcnLCB7IHR5cGU6IGZuIH0pXG4gIGlmIChpcy5vYmplY3QodHlwZSkpIHtcbiAgICBsaXN0ZW5lcnMgPSB0eXBlXG4gICAgdHlwZSA9ICcnXG4gIH1cblxuICBpZiAoaXMuZnVuYyhsaXN0ZW5lcnMpKSB7XG4gICAgcmVzdWx0W3R5cGVdID0gcmVzdWx0W3R5cGVdIHx8IFtdXG4gICAgcmVzdWx0W3R5cGVdLnB1c2gobGlzdGVuZXJzKVxuICB9XG4gIGVsc2UgaWYgKGlzLmFycmF5KGxpc3RlbmVycykpIHtcbiAgICBmb3IgKGNvbnN0IGwgb2YgbGlzdGVuZXJzKSB7XG4gICAgICBub3JtYWxpemUodHlwZSwgbCwgcmVzdWx0KVxuICAgIH1cbiAgfVxuICBlbHNlIGlmIChpcy5vYmplY3QobGlzdGVuZXJzKSkge1xuICAgIGZvciAoY29uc3QgcHJlZml4IGluIGxpc3RlbmVycykge1xuICAgICAgY29uc3QgY29tYmluZWRUeXBlcyA9IHNwbGl0KHByZWZpeCkubWFwKChwKSA9PiBgJHt0eXBlfSR7cH1gKVxuXG4gICAgICBub3JtYWxpemUoY29tYmluZWRUeXBlcywgbGlzdGVuZXJzW3ByZWZpeF0sIHJlc3VsdClcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0IGFzIE5vcm1hbGl6ZWRMaXN0ZW5lcnNcbn1cblxuZnVuY3Rpb24gc3BsaXQgKHR5cGU6IHN0cmluZykge1xuICByZXR1cm4gdHlwZS50cmltKCkuc3BsaXQoLyArLylcbn1cbiJdfQ==