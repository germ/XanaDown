import test from '@interactjs/_dev/test/test';
import { indexOfDeepestElement } from './domUtils';
test('utils/domUtils/indexOfDeepestElement', t => {
    const ownerDocument = {
        name: 'Owner Document',
        lastChild: null,
    };
    const html = {
        name: 'html',
        lastChild: null,
        ownerDocument,
        parentNode: ownerDocument,
    };
    const body = {
        name: 'body',
        lastChild: null,
        ownerDocument,
        parentNode: html,
    };
    const wrapper = {
        name: 'wrapper',
        ownerDocument,
        parentNode: body,
        lastChild: null,
    };
    const a = {
        name: 'a',
        ownerDocument,
        parentNode: wrapper,
        lastChild: null,
    };
    const b1 = {
        name: 'b1',
        ownerDocument,
        parentNode: a,
        lastChild: null,
    };
    const b2 = {
        name: 'b2',
        ownerDocument,
        parentNode: a,
        lastChild: null,
    };
    const c1 = {
        name: 'c1',
        ownerDocument,
        parentNode: b1,
        lastChild: null,
    };
    const c2 = {
        name: 'c2',
        ownerDocument,
        parentNode: b1,
        lastChild: null,
    };
    const d1 = {
        name: 'd1',
        ownerDocument,
        parentNode: c1,
        lastChild: null,
    };
    const d1Comp = {
        name: 'd1_comp',
        ownerDocument,
        parentNode: d1,
        lastChild: null,
    };
    const d2Shadow = {
        name: 'd2_shadow',
        ownerDocument,
        parentNode: null,
        lastChild: null,
        host: d1Comp,
    };
    ownerDocument.lastChild = html;
    html.lastChild = body;
    body.lastChild = wrapper;
    a.lastChild = b2;
    b1.lastChild = c2;
    b2.lastChild = null;
    c1.lastChild = d1;
    c2.lastChild = null;
    d1.lastChild = d1;
    wrapper.lastChild = a;
    const deepestShadow = [null, d2Shadow, c1, b1, a];
    t.equal(indexOfDeepestElement(deepestShadow), deepestShadow.indexOf(d2Shadow), 'works with shadow root');
    const noShadow = [null, d1, c1, b1];
    t.equal(indexOfDeepestElement(noShadow), noShadow.indexOf(d1), 'only chooses elements that are passed in');
    t.end();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tVXRpbHMuc3BlYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImRvbVV0aWxzLnNwZWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxJQUFJLE1BQU0sNEJBQTRCLENBQUE7QUFDN0MsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sWUFBWSxDQUFBO0FBRWxELElBQUksQ0FBQyxzQ0FBc0MsRUFBRSxDQUFDLENBQUMsRUFBRTtJQUMvQyxNQUFNLGFBQWEsR0FBRztRQUNwQixJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLFNBQVMsRUFBRSxJQUFJO0tBQ2hCLENBQUE7SUFDRCxNQUFNLElBQUksR0FBRztRQUNYLElBQUksRUFBRSxNQUFNO1FBQ1osU0FBUyxFQUFFLElBQUk7UUFDZixhQUFhO1FBQ2IsVUFBVSxFQUFFLGFBQWE7S0FDMUIsQ0FBQTtJQUVELE1BQU0sSUFBSSxHQUFHO1FBQ1gsSUFBSSxFQUFFLE1BQU07UUFDWixTQUFTLEVBQUUsSUFBSTtRQUNmLGFBQWE7UUFDYixVQUFVLEVBQUUsSUFBSTtLQUVqQixDQUFBO0lBRUQsTUFBTSxPQUFPLEdBQUc7UUFDZCxJQUFJLEVBQUUsU0FBUztRQUNmLGFBQWE7UUFDYixVQUFVLEVBQUUsSUFBSTtRQUNoQixTQUFTLEVBQUUsSUFBSTtLQUNoQixDQUFBO0lBRUQsTUFBTSxDQUFDLEdBQUc7UUFDUixJQUFJLEVBQUUsR0FBRztRQUNULGFBQWE7UUFDYixVQUFVLEVBQUUsT0FBTztRQUNuQixTQUFTLEVBQUUsSUFBSTtLQUNoQixDQUFBO0lBRUQsTUFBTSxFQUFFLEdBQUc7UUFDVCxJQUFJLEVBQUUsSUFBSTtRQUNWLGFBQWE7UUFDYixVQUFVLEVBQUUsQ0FBQztRQUNiLFNBQVMsRUFBRSxJQUFJO0tBQ2hCLENBQUE7SUFFRCxNQUFNLEVBQUUsR0FBRztRQUNULElBQUksRUFBRSxJQUFJO1FBQ1YsYUFBYTtRQUNiLFVBQVUsRUFBRSxDQUFDO1FBQ2IsU0FBUyxFQUFFLElBQUk7S0FDaEIsQ0FBQTtJQUVELE1BQU0sRUFBRSxHQUFHO1FBQ1QsSUFBSSxFQUFFLElBQUk7UUFDVixhQUFhO1FBQ2IsVUFBVSxFQUFFLEVBQUU7UUFDZCxTQUFTLEVBQUUsSUFBSTtLQUNoQixDQUFBO0lBRUQsTUFBTSxFQUFFLEdBQUc7UUFDVCxJQUFJLEVBQUUsSUFBSTtRQUNWLGFBQWE7UUFDYixVQUFVLEVBQUUsRUFBRTtRQUNkLFNBQVMsRUFBRSxJQUFJO0tBQ2hCLENBQUE7SUFFRCxNQUFNLEVBQUUsR0FBRztRQUNULElBQUksRUFBRSxJQUFJO1FBQ1YsYUFBYTtRQUNiLFVBQVUsRUFBRSxFQUFFO1FBQ2QsU0FBUyxFQUFFLElBQUk7S0FDaEIsQ0FBQTtJQUVELE1BQU0sTUFBTSxHQUFHO1FBQ2IsSUFBSSxFQUFFLFNBQVM7UUFDZixhQUFhO1FBQ2IsVUFBVSxFQUFFLEVBQUU7UUFDZCxTQUFTLEVBQUUsSUFBSTtLQUNoQixDQUFBO0lBRUQsTUFBTSxRQUFRLEdBQUc7UUFDZixJQUFJLEVBQUUsV0FBVztRQUNqQixhQUFhO1FBQ2IsVUFBVSxFQUFFLElBQUk7UUFDaEIsU0FBUyxFQUFFLElBQUk7UUFDZixJQUFJLEVBQUUsTUFBTTtLQUNiLENBQUE7SUFFRCxhQUFhLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQTtJQUM5QixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQTtJQUNyQixJQUFJLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQTtJQUN4QixDQUFDLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQTtJQUNoQixFQUFFLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQTtJQUNqQixFQUFFLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQTtJQUNuQixFQUFFLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQTtJQUNqQixFQUFFLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQTtJQUNuQixFQUFFLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQTtJQUNqQixPQUFPLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQTtJQUVyQixNQUFNLGFBQWEsR0FBRyxDQUFDLElBQUksRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQTtJQUNqRCxDQUFDLENBQUMsS0FBSyxDQUFDLHFCQUFxQixDQUFDLGFBQWEsQ0FBQyxFQUFFLGFBQWEsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUUsd0JBQXdCLENBQUMsQ0FBQTtJQUV4RyxNQUFNLFFBQVEsR0FBRyxDQUFDLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFBO0lBRW5DLENBQUMsQ0FBQyxLQUFLLENBQUMscUJBQXFCLENBQUMsUUFBUSxDQUFDLEVBQUUsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsRUFBRSwwQ0FBMEMsQ0FBQyxDQUFBO0lBRTFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQTtBQUNULENBQUMsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHRlc3QgZnJvbSAnQGludGVyYWN0anMvX2Rldi90ZXN0L3Rlc3QnXG5pbXBvcnQgeyBpbmRleE9mRGVlcGVzdEVsZW1lbnQgfSBmcm9tICcuL2RvbVV0aWxzJ1xuXG50ZXN0KCd1dGlscy9kb21VdGlscy9pbmRleE9mRGVlcGVzdEVsZW1lbnQnLCB0ID0+IHtcbiAgY29uc3Qgb3duZXJEb2N1bWVudCA9IHtcbiAgICBuYW1lOiAnT3duZXIgRG9jdW1lbnQnLFxuICAgIGxhc3RDaGlsZDogbnVsbCxcbiAgfVxuICBjb25zdCBodG1sID0ge1xuICAgIG5hbWU6ICdodG1sJyxcbiAgICBsYXN0Q2hpbGQ6IG51bGwsXG4gICAgb3duZXJEb2N1bWVudCxcbiAgICBwYXJlbnROb2RlOiBvd25lckRvY3VtZW50LFxuICB9XG5cbiAgY29uc3QgYm9keSA9IHtcbiAgICBuYW1lOiAnYm9keScsXG4gICAgbGFzdENoaWxkOiBudWxsLFxuICAgIG93bmVyRG9jdW1lbnQsXG4gICAgcGFyZW50Tm9kZTogaHRtbCxcblxuICB9XG5cbiAgY29uc3Qgd3JhcHBlciA9IHtcbiAgICBuYW1lOiAnd3JhcHBlcicsXG4gICAgb3duZXJEb2N1bWVudCxcbiAgICBwYXJlbnROb2RlOiBib2R5LFxuICAgIGxhc3RDaGlsZDogbnVsbCxcbiAgfVxuXG4gIGNvbnN0IGEgPSB7XG4gICAgbmFtZTogJ2EnLFxuICAgIG93bmVyRG9jdW1lbnQsXG4gICAgcGFyZW50Tm9kZTogd3JhcHBlcixcbiAgICBsYXN0Q2hpbGQ6IG51bGwsXG4gIH1cblxuICBjb25zdCBiMSA9IHtcbiAgICBuYW1lOiAnYjEnLFxuICAgIG93bmVyRG9jdW1lbnQsXG4gICAgcGFyZW50Tm9kZTogYSxcbiAgICBsYXN0Q2hpbGQ6IG51bGwsXG4gIH1cblxuICBjb25zdCBiMiA9IHtcbiAgICBuYW1lOiAnYjInLFxuICAgIG93bmVyRG9jdW1lbnQsXG4gICAgcGFyZW50Tm9kZTogYSxcbiAgICBsYXN0Q2hpbGQ6IG51bGwsXG4gIH1cblxuICBjb25zdCBjMSA9IHtcbiAgICBuYW1lOiAnYzEnLFxuICAgIG93bmVyRG9jdW1lbnQsXG4gICAgcGFyZW50Tm9kZTogYjEsXG4gICAgbGFzdENoaWxkOiBudWxsLFxuICB9XG5cbiAgY29uc3QgYzIgPSB7XG4gICAgbmFtZTogJ2MyJyxcbiAgICBvd25lckRvY3VtZW50LFxuICAgIHBhcmVudE5vZGU6IGIxLFxuICAgIGxhc3RDaGlsZDogbnVsbCxcbiAgfVxuXG4gIGNvbnN0IGQxID0ge1xuICAgIG5hbWU6ICdkMScsXG4gICAgb3duZXJEb2N1bWVudCxcbiAgICBwYXJlbnROb2RlOiBjMSxcbiAgICBsYXN0Q2hpbGQ6IG51bGwsXG4gIH1cblxuICBjb25zdCBkMUNvbXAgPSB7XG4gICAgbmFtZTogJ2QxX2NvbXAnLFxuICAgIG93bmVyRG9jdW1lbnQsXG4gICAgcGFyZW50Tm9kZTogZDEsXG4gICAgbGFzdENoaWxkOiBudWxsLFxuICB9XG5cbiAgY29uc3QgZDJTaGFkb3cgPSB7XG4gICAgbmFtZTogJ2QyX3NoYWRvdycsXG4gICAgb3duZXJEb2N1bWVudCxcbiAgICBwYXJlbnROb2RlOiBudWxsLFxuICAgIGxhc3RDaGlsZDogbnVsbCxcbiAgICBob3N0OiBkMUNvbXAsXG4gIH1cblxuICBvd25lckRvY3VtZW50Lmxhc3RDaGlsZCA9IGh0bWxcbiAgaHRtbC5sYXN0Q2hpbGQgPSBib2R5XG4gIGJvZHkubGFzdENoaWxkID0gd3JhcHBlclxuICBhLmxhc3RDaGlsZCA9IGIyXG4gIGIxLmxhc3RDaGlsZCA9IGMyXG4gIGIyLmxhc3RDaGlsZCA9IG51bGxcbiAgYzEubGFzdENoaWxkID0gZDFcbiAgYzIubGFzdENoaWxkID0gbnVsbFxuICBkMS5sYXN0Q2hpbGQgPSBkMVxuICB3cmFwcGVyLmxhc3RDaGlsZCA9IGFcblxuICBjb25zdCBkZWVwZXN0U2hhZG93ID0gW251bGwsIGQyU2hhZG93LCBjMSwgYjEsIGFdXG4gIHQuZXF1YWwoaW5kZXhPZkRlZXBlc3RFbGVtZW50KGRlZXBlc3RTaGFkb3cpLCBkZWVwZXN0U2hhZG93LmluZGV4T2YoZDJTaGFkb3cpLCAnd29ya3Mgd2l0aCBzaGFkb3cgcm9vdCcpXG5cbiAgY29uc3Qgbm9TaGFkb3cgPSBbbnVsbCwgZDEsIGMxLCBiMV1cblxuICB0LmVxdWFsKGluZGV4T2ZEZWVwZXN0RWxlbWVudChub1NoYWRvdyksIG5vU2hhZG93LmluZGV4T2YoZDEpLCAnb25seSBjaG9vc2VzIGVsZW1lbnRzIHRoYXQgYXJlIHBhc3NlZCBpbicpXG5cbiAgdC5lbmQoKVxufSlcbiJdfQ==