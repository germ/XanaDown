import test from '@interactjs/_dev/test/test';
import Eventable from './Eventable';
test('Eventable', (t) => {
    const eventable = new Eventable();
    const type = 'TEST';
    const testEvent = {
        type,
        immediatePropagationStopped: false,
    };
    let firedEvent;
    const listener = (event) => { firedEvent = event; };
    eventable.on(type, listener);
    eventable.fire(testEvent);
    t.equal(firedEvent, testEvent, 'on\'d listener is called');
    firedEvent = undefined;
    eventable.off(type, listener);
    eventable.fire(testEvent);
    t.equal(firedEvent, undefined, 'off\'d listener is not called');
    testEvent.immediatePropagationStopped = true;
    eventable.on(type, listener);
    eventable.fire(testEvent);
    t.equal(firedEvent, undefined, 'listener is not called with immediatePropagationStopped');
    t.end();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnRhYmxlLnNwZWMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJFdmVudGFibGUuc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLElBQUksTUFBTSw0QkFBNEIsQ0FBQTtBQUM3QyxPQUFPLFNBQVMsTUFBTSxhQUFhLENBQUE7QUFFbkMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFO0lBQ3RCLE1BQU0sU0FBUyxHQUFHLElBQUksU0FBUyxFQUFFLENBQUE7SUFDakMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFBO0lBRW5CLE1BQU0sU0FBUyxHQUFHO1FBQ2hCLElBQUk7UUFDSiwyQkFBMkIsRUFBRSxLQUFLO0tBQ25DLENBQUE7SUFDRCxJQUFJLFVBQVUsQ0FBQTtJQUNkLE1BQU0sUUFBUSxHQUFHLENBQUMsS0FBSyxFQUFFLEVBQUUsR0FBRyxVQUFVLEdBQUcsS0FBSyxDQUFBLENBQUMsQ0FBQyxDQUFBO0lBRWxELFNBQVMsQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFBO0lBQzVCLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUE7SUFFekIsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsU0FBUyxFQUFFLDBCQUEwQixDQUFDLENBQUE7SUFFMUQsVUFBVSxHQUFHLFNBQVMsQ0FBQTtJQUN0QixTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQTtJQUM3QixTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0lBRXpCLENBQUMsQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLFNBQVMsRUFBRSwrQkFBK0IsQ0FBQyxDQUFBO0lBRS9ELFNBQVMsQ0FBQywyQkFBMkIsR0FBRyxJQUFJLENBQUE7SUFDNUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUE7SUFDNUIsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQTtJQUV6QixDQUFDLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRSxTQUFTLEVBQUUseURBQXlELENBQUMsQ0FBQTtJQUV6RixDQUFDLENBQUMsR0FBRyxFQUFFLENBQUE7QUFDVCxDQUFDLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0ZXN0IGZyb20gJ0BpbnRlcmFjdGpzL19kZXYvdGVzdC90ZXN0J1xuaW1wb3J0IEV2ZW50YWJsZSBmcm9tICcuL0V2ZW50YWJsZSdcblxudGVzdCgnRXZlbnRhYmxlJywgKHQpID0+IHtcbiAgY29uc3QgZXZlbnRhYmxlID0gbmV3IEV2ZW50YWJsZSgpXG4gIGNvbnN0IHR5cGUgPSAnVEVTVCdcblxuICBjb25zdCB0ZXN0RXZlbnQgPSB7XG4gICAgdHlwZSxcbiAgICBpbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ6IGZhbHNlLFxuICB9XG4gIGxldCBmaXJlZEV2ZW50XG4gIGNvbnN0IGxpc3RlbmVyID0gKGV2ZW50KSA9PiB7IGZpcmVkRXZlbnQgPSBldmVudCB9XG5cbiAgZXZlbnRhYmxlLm9uKHR5cGUsIGxpc3RlbmVyKVxuICBldmVudGFibGUuZmlyZSh0ZXN0RXZlbnQpXG5cbiAgdC5lcXVhbChmaXJlZEV2ZW50LCB0ZXN0RXZlbnQsICdvblxcJ2QgbGlzdGVuZXIgaXMgY2FsbGVkJylcblxuICBmaXJlZEV2ZW50ID0gdW5kZWZpbmVkXG4gIGV2ZW50YWJsZS5vZmYodHlwZSwgbGlzdGVuZXIpXG4gIGV2ZW50YWJsZS5maXJlKHRlc3RFdmVudClcblxuICB0LmVxdWFsKGZpcmVkRXZlbnQsIHVuZGVmaW5lZCwgJ29mZlxcJ2QgbGlzdGVuZXIgaXMgbm90IGNhbGxlZCcpXG5cbiAgdGVzdEV2ZW50LmltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCA9IHRydWVcbiAgZXZlbnRhYmxlLm9uKHR5cGUsIGxpc3RlbmVyKVxuICBldmVudGFibGUuZmlyZSh0ZXN0RXZlbnQpXG5cbiAgdC5lcXVhbChmaXJlZEV2ZW50LCB1bmRlZmluZWQsICdsaXN0ZW5lciBpcyBub3QgY2FsbGVkIHdpdGggaW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkJylcblxuICB0LmVuZCgpXG59KVxuIl19